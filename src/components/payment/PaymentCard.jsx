import React, { useState } from "react";
import {
  Modal,
  Card,
  Descriptions,
  Typography,
  Divider,
  Space,
  Button,
} from "antd";
import { useAuth } from "../../hooks/useAuth";

const { Text, Title } = Typography;

const PaymentCard = ({ visible, onClose, sessionData, onConfirm }) => {
  const { user } = useAuth(); // L·∫•y user ƒë·ªÉ bi·∫øt g√≥i ƒë√£ ƒëƒÉng k√Ω
  // Ch·ªçn 1 trong 2 ph∆∞∆°ng th·ª©c: 'momo' ho·∫∑c 'package'
  const [paymentMethod, setPaymentMethod] = useState("momo");

  // G√≥i d·ªãch v·ª• - trong production fetch t·ª´ API / backend
  const packageDiscounts = {
    basic: { name: "G√≥i c∆° b·∫£n (Basic)", discount: 0 },
    member: { name: "G√≥i th√†nh vi√™n (Member)", discount: 0.05 },
    business: { name: "G√≥i doanh nghi·ªáp (Business)", discount: 0.1 },
  };

  // L·∫•y g√≥i ƒëƒÉng k√Ω c·ªßa user (fallback 'basic' n·∫øu kh√¥ng c√≥)
  const registeredPackage =
    user?.servicePackage || user?.package || user?.registeredPackage || "basic";

  // T√≠nh t·ªïng ti·ªÅn sau khi √°p d·ª•ng g√≥i (n·∫øu b·∫≠t usePackage)
  const calculateTotal = () => {
    let total = sessionData.basePrice;
    const usePackage = paymentMethod === "package";
    if (usePackage && registeredPackage && packageDiscounts[registeredPackage]) {
      const discount = packageDiscounts[registeredPackage].discount;
      total = total * (1 - discount);
    }
    return Math.round(total);
  };

  // X·ª≠ l√Ω x√°c nh·∫≠n thanh to√°n
  const handleConfirm = () => {
    const usePackage = paymentMethod === "package";
    const paymentData = {
      paymentMethod,
      usePackage,
      // Kh√¥ng cho user ch·ªçn g√≥i ·ªü UI => h·ªá th·ªëng t·ª± l·∫•y g√≥i ƒëƒÉng k√Ω
      selectedPackage: usePackage ? registeredPackage : null,
      packageInfo: usePackage ? packageDiscounts[registeredPackage] : null,
      totalAmount: calculateTotal(),
    };
    onConfirm(paymentData);
  };

  return (
    <Modal open={visible} onCancel={onClose} footer={null} width={600} centered>
      <Card title="üí≥ Thanh to√°n phi√™n s·∫°c" style={{ border: "none" }}>
        {/* Th√¥ng tin phi√™n s·∫°c */}
        <Descriptions column={1} size="small" style={{ marginBottom: "24px" }}>
          <Descriptions.Item label="T√™n tr·∫°m s·∫°c">
            {sessionData.stationName}
          </Descriptions.Item>
          <Descriptions.Item label="M√£ phi√™n s·∫°c">
            {sessionData.sessionId}
          </Descriptions.Item>
          <Descriptions.Item label="Th·ªùi gian s·∫°c">
            {sessionData.duration}
          </Descriptions.Item>
          <Descriptions.Item label="ƒêi·ªán nƒÉng ti√™u th·ª•">
            {sessionData.energyConsumed} kWh
          </Descriptions.Item>
          {/* Kh√¥ng hi·ªÉn th·ªã t√™n g√≥i/chi ti·∫øt gi·∫£m gi√° theo y√™u c·∫ßu */}
          <Descriptions.Item label="T·ªïng ti·ªÅn thanh to√°n">
            <Text strong style={{ fontSize: "18px", color: "#ff4d4f" }}>
              {calculateTotal().toLocaleString("vi-VN")} VNƒê
            </Text>
          </Descriptions.Item>
        </Descriptions>

        {/* Ph∆∞∆°ng th·ª©c thanh to√°n - CH·ªåN 1 TRONG 2 (b·ªè n√∫t tr√≤n) */}
        <Space direction="vertical" style={{ width: "100%" }} size="large">
          <Button
            type={paymentMethod === "momo" ? "primary" : "default"}
            block
            onClick={() => setPaymentMethod("momo")}
            aria-pressed={paymentMethod === "momo"}
          >
            Thanh to√°n v·ªõi MoMo
          </Button>

          <Button
            type={paymentMethod === "package" ? "primary" : "default"}
            block
            onClick={() => setPaymentMethod("package")}
            aria-pressed={paymentMethod === "package"}
          >
            G√≥i d·ªãch v·ª•
          </Button>
        </Space>

        <Divider />

        {/* N√∫t h√†nh ƒë·ªông */}
        <Space style={{ width: "100%", justifyContent: "flex-end" }}>
          <Button onClick={onClose} size="large">
            H·ªßy
          </Button>
          <Button
            type="primary"
            onClick={handleConfirm}
            size="large"
            style={{ backgroundColor: "#0b9459", color: "#fff" }}
          >
            Thanh to√°n
          </Button>
        </Space>
      </Card>
    </Modal>
  );
};

export default PaymentCard;
